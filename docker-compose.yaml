services:
  vault:
    image: vault:1.13.3
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      VAULT_DEV_LISTEN_ADDRESS: 127.0.0.1:8200
    ports:
      - "8200:8200"
    volumes:
      - vault_data:/vault/file
    cap_add:
      - IPC_LOCK
    networks:
      - app-net
    restart: unless-stopped

  postgres:
    image: postgres:16.8-alpine3.20
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net
    restart: unless-stopped

  config-server:
    image: config-server:latest
    build: services/config-server
    restart: "unless-stopped"
    ports:
      - "8888:8888"
    depends_on:
      - vault

  pastebin-api:
    image: pastebin-api:latest
    build: services/pastebin-api
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
    networks:
      - app-net

volumes:
  postgres_data:
  vault_data:

networks:
  app-net:
    driver: bridge